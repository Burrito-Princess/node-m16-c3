<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <!-- <link rel="stylesheet" href="./src/output.css"> -->
    <link rel="stylesheet" href="./output.css">

    <!-- <link rel="stylesheet" href="./src/input.css"> -->
    
    <script src="/socket.io/socket.io.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.2/socket.io.js"></script>

    <script type="module" defer></script>

</head>
<body>
    <h2 class="text-red-600">
        hello
        <%= locals.username %>
    </h2>
    <form id="chat">
        <ul id="userlist"></ul>
        <ul id="messages"></ul>
        <input id="message" autocomplete="off">
        <button id="send">Send</button>

    </form>
</body>
<script>
    const settings = {Transports: ["WebSocket"], upgrade: false};
    const socket =  io( settings);
    const form = document.getElementById("chat");
    const userlist = document.getElementById("userlist");
    const messages = document.getElementById("messages");
    const message = document.getElementById("message");
    const username = window.location.href.split('/').pop();

    socket.emit('join', username);

    socket.on('join', (data) => {
        const {username, users} = data;
        let li = document.createElement("li");
        li.textContent = `${username} Joined the Chat`;
        messages.appendChild(li);
        messages.scrollTo(0, messages.scrollHeight);
    });

    socket.on('leave', (data) => {
        const {username, users} = data;
        let li = document.createElement("li");
        li.textContent = `${username} Left the Chat`;
        messages.appendChild(li);
        messages.scrollTo(0, messages.scrollHeight);

        userlist.innerHTML = '';
        for (let i = 0; i < users.length; i++){
            li = document.createElement('li');
            li.textContent = users[i];
            userlist.appendChild(li);
        }
    });

    socket.on('message', (data) => {
        const {messenger , message} = data;
        const li = document.createElement('li');
        li.textContent = `${messenger} : ${message}`;
        messages.appendChild(li);
        messages.scrollTo(0, messages.scrollHeight);
    });

    form.addEventListener('submit', (event) => {
        event.preventDefault();
        if (message.value){
            socket.emit('message', {messenger:username, message:message.value});
            message.value = '';
        }
    });


</script>
</html>

